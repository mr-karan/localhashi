---
# Create DNS Token
- block:
    - name: Create Consul Default Token only if it doesn't exist
      ansible.builtin.shell:
        cmd: 'consul acl token create -http-addr={{consul_address}}:8500 -description "Default Token used for DNS" -policy-name dns-policy -secret={{consul_acl_default_token}} -token={{ consul_acl_bootstrap_token }}'
      register: consul_acl_default_token_read_result
      # Only error out if the error is something else apart from the token already being existing.
      failed_when:
        - consul_acl_default_token_read_result.rc != 0
        - '"Invalid Token: SecretID is already in use" not in consul_acl_default_token_read_result.stderr'

  when:
    - consul_node_role == 'bootstrap'
  run_once: true

# Create Agent Token
- block:
    - name: Create Consul Agent Token only if it doesn't exist
      ansible.builtin.shell:
        cmd: 'consul acl token create -http-addr={{consul_address}}:8500 -description "Agent Token used for interserver" -policy-name agent-policy -secret={{consul_acl_agent_token}} -token={{ consul_acl_bootstrap_token }}'
      register: consul_acl_agent_token_read_result
      # Only error out if the error is something else apart from the token already being existing.
      failed_when:
        - consul_acl_agent_token_read_result.rc != 0
        - '"Invalid Token: SecretID is already in use" not in consul_acl_agent_token_read_result.stderr'

  when:
    - consul_node_role == 'bootstrap'
  run_once: true

# Create Nomad Server Token
- block:
    - name: Create Nomad Server Token only if it doesn't exist
      ansible.builtin.shell:
        cmd: 'consul acl token create -http-addr={{consul_address}}:8500 -description "Nomad server Token used for registering services" -policy-name nomad-server-policy -secret={{consul_acl_nomad_server_token}} -token={{ consul_acl_bootstrap_token }}'
      register: consul_acl_nomad_server_token_read_result
      # Only error out if the error is something else apart from the token already being existing.
      failed_when:
        - consul_acl_nomad_server_token_read_result.rc != 0
        - '"Invalid Token: SecretID is already in use" not in consul_acl_nomad_server_token_read_result.stderr'

  when:
    - consul_node_role == 'bootstrap'
  run_once: true

# Create Nomad Client Token
- block:
    - name: Create Nomad Client Token only if it doesn't exist
      ansible.builtin.shell:
        cmd: 'consul acl token create -http-addr={{consul_address}}:8500 -description "Nomad client Token used for registering services" -policy-name nomad-client-policy -secret={{consul_acl_nomad_client_token}} -token={{ consul_acl_bootstrap_token }}'
      register: consul_acl_nomad_client_token_read_result
      # Only error out if the error is something else apart from the token already being existing.
      failed_when:
        - consul_acl_nomad_client_token_read_result.rc != 0
        - '"Invalid Token: SecretID is already in use" not in consul_acl_nomad_client_token_read_result.stderr'

  when:
    - consul_node_role == 'bootstrap'
  run_once: true
