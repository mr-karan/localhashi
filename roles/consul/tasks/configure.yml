---
- name: Create configuration
  template:
    src: configs/base.hcl.j2
    dest: "/etc/consul.d/consul.hcl"
    owner: consul
    group: consul
    mode: 0644
  notify:
    - restart consul

# # NOTE: consul should be running to configure ACL.
# # So, once the playbook is executed, `consul_enable_acl` is set to true and again executed.
# - block:
#   - name: Create ACL Bootstrap Token
#     import_tasks: acl_bootstrap.yml

#   - name: Create ACL Policies
#     import_tasks: acl_policies.yml

#   - name: Create ACL Tokens
#     import_tasks: acl_tokens.yml
  
#   when: consul_enable_acl | bool

- name: Validate config file
  command: "consul validate /etc/consul.d/consul.hcl"

- name: Modify systemd script for consul
  template:
    src: systemd-service.j2
    dest: "/lib/systemd/system/consul.service"
    owner: root
    group: root
    mode: 0644
  register: systemd_unit
  notify: restart consul

- name: Reload systemd
  systemd:
    daemon_reload: true
  when: systemd_unit is changed

- name: Create resolved config for forwarding DNS
  template:
    src: resolved-consul.conf.j2
    dest: /etc/systemd/resolved.conf
    owner: root
    group: root
    mode: 0644
  notify: restart systemd resolved

- name: Start Consul
  service:
    name: consul
    state: started
    enabled: yes

- name: Check Consul HTTP API (via TCP socket)
  wait_for:
    delay: 15
    port: 8500
    host: "{{ consul_address }}"
